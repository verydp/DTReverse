#include <cstdio>
#include <string.h>

unsigned char arr[] = {
	0x89, 0x54, 0x24, 0x10, 0x89, 0x4c ,0x24, 0x08, 0x55, 0x57, 0x48, 0x81, 0xec, 0xe8, 0x00, 0x00, 0x00, 0x48, 0x8d,
	0x6c, 0x24, 0x20, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8b, 0x85, 0xe8,
	0x00, 0x00, 0x00, 0x8b, 0x8d, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xc8, 0x8b, 0xc1, 0x48, 0x8d, 0xa5, 0xc8, 0x00, 0x00,
	0x00, 0x5f, 0x5d, 0xc3, 0xcc
};


/*
89 54 24 10 89 4c 24 08 55 57 48 81 ec e8 00 00 00 48 8d  ?T$.?L$.UWH???...H?
6c 24 20 48 8d 0d 84 f8 00 00 90 90 90 90 90 90 8b 85 e8  l$ H?.??..???..????
00 00 00 8b 8d e0 00 00 00 03 c8 8b c1 48 8d a5 c8 00 00  ...???....???H???..
00 5f 5d c3*/

int function3_6_1(int x, int y) {
	return x + y;
}

unsigned char array[] = {
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x07,0x09,
	0x00,0x20,0x10,0x03,0x03,0x0C,0x00,0x00,0x44,0x00,
	0x00,0x33,0x00,0x47,0x0C,0x0E,0x00,0x0D,0x00,0x11,
	0x00,0x00,0x00,0x02,0x64,0x00,0x00,0x00,0xAA,0x00,
	0x00,0x00,0x64,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x02,0x00,0x74,0x0F,0x41,0x00,0x00,0x00,
	0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0A,0x00,
	0x00,0x02,0x74,0x0F,0x41,0x00,0x06,0x08,0x00,0x00,
	0x00,0x00,0x00,0x64,0x00,0x0F,0x00,0x00,0x0D,0x00,
	0x00,0x00,0x23,0x00,0x00,0x64,0x00,0x00,0x64,0x00
};

int (*px)[2];

int (*py)[2][3];

char (*pz)[2];

char (*pk)[2][3];

int main() { 


	typedef int (*func)(int, int);

	//func p = (int (*)(int, int))&function3_6_1;
	
	func p = (int (*)(int, int))&arr;  //报错的原因可能是无法将数据区的数据转换成可执行的汇编指令。

	int x = p(1, 2);

	printf("%d\n", x);

	//function3_6(1,2);


	px = (int (*)[2])array;
	py = (int (*)[2][3])array;
	pz = (char (*)[2])array;
	pk = (char (*)[2][3])array;

	//printf("%x\n", *(*(px + 0) + 0));			//4*2*0 + 4*0 = 0 --> 03020100
	//printf("%x\n", *(*(px + 1) + 0));			//4*2*1 + 4*0 = 8 --> 20000907
	//printf("%x\n", *(*(px + 2) + 3));			//4*4*2 + 4*3 = 44 --> 00000000			//4*2*2 + 4*3 = 16+12 =28 -->1100
	//printf("%x\n", *(*(*(py + 1) + 2) + 3));	//4*2*3*1 + 4*3*2 + 4*3 = 24 + 24 + 12 = 60 --> 20000		//4*6*1 + 4*3*2 + 4*3=24+ 24 +12 = 60 -->1
	//printf("%x\n", *(*(pz + 2) + 3));			//1*2*2 + 1*3 =4+3 = 7 --> 07
	//printf("%x\n", *(*(*(pk + 2) + 3) + 4));	//1*2*3*2 + 1*3*3 + 1*4 = 12 + 9 + 4 = 25 --> 0e


}